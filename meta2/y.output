Terminals unused in grammar

    ARROW
    RESERVED
    MUL


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE recPR RBRACE
    2        | CLASS ID LBRACE RBRACE

    3 recPR: MethodDecl
    4      | FieldDecl
    5      | SEMICOLON
    6      | MethodDecl recPR
    7      | FieldDecl recPR
    8      | SEMICOLON recPR

    9 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   10 FieldDecl: PUBLIC STATIC Type ID recCOMMAID SEMICOLON
   11          | PUBLIC STATIC Type ID SEMICOLON
   12          | error SEMICOLON

   13 recCOMMAID: COMMA ID
   14           | COMMA ID recCOMMAID

   15 Type: BOOL
   16     | INT
   17     | DOUBLE

   18 MethodHeader: Type ID LPAR FormalParams RPAR
   19             | Type ID LPAR RPAR
   20             | VOID ID LPAR FormalParams RPAR
   21             | VOID ID LPAR RPAR

   22 FormalParams: Type ID recFP
   23             | STRING LSQ RSQ ID

   24 recFP: COMMA Type ID recFP
   25      | ε

   26 MethodBody: LBRACE recMD RBRACE
   27           | LBRACE RBRACE

   28 recMD: Statement
   29      | VarDecl
   30      | Statement recMD
   31      | VarDecl recMD

   32 VarDecl: Type ID recVAR SEMICOLON
   33        | Type ID SEMICOLON

   34 recVAR: COMMA ID
   35       | COMMA ID recVAR

   36 Statement: LBRACE recSTAT RBRACE
   37          | IF LPAR Expr RPAR Statement ELSE Statement
   38          | IF LPAR Expr RPAR Statement
   39          | WHILE LPAR Expr RPAR Statement
   40          | RETURN Expr SEMICOLON
   41          | RETURN SEMICOLON
   42          | MethodInvocation SEMICOLON
   43          | Assignment SEMICOLON
   44          | ParseArgs SEMICOLON
   45          | SEMICOLON
   46          | PRINT LPAR Expr RPAR SEMICOLON
   47          | PRINT LPAR STRLIT RPAR SEMICOLON
   48          | PRINT LPAR RPAR SEMICOLON
   49          | error SEMICOLON

   50 recSTAT: Statement recSTAT
   51        | ε

   52 MethodInvocation: ID LPAR Expr recCOMMAEXP RPAR
   53                 | ID LPAR Expr RPAR
   54                 | ID LPAR RPAR
   55                 | ID LPAR error RPAR

   56 recCOMMAEXP: recCOMMAEXP COMMA Expr
   57            | COMMA Expr

   58 Assignment: ID ASSIGN Expr

   59 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   60          | PARSEINT LPAR error RPAR

   61 Expr: Assignment
   62     | Expr2

   63 Expr2: Expr2 PLUS Expr2
   64      | Expr2 MINUS Expr2
   65      | Expr2 STAR Expr2
   66      | Expr2 DIV Expr2
   67      | Expr2 MOD Expr2
   68      | Expr2 AND Expr2
   69      | Expr2 OR Expr2
   70      | Expr2 XOR Expr2
   71      | Expr2 LSHIFT Expr2
   72      | Expr2 RSHIFT Expr2
   73      | Expr2 EQ Expr2
   74      | Expr2 GE Expr2
   75      | Expr2 GT Expr2
   76      | Expr2 LE Expr2
   77      | Expr2 LT Expr2
   78      | Expr2 NE Expr2
   79      | MINUS Expr2
   80      | PLUS Expr2
   81      | NOT Expr2
   82      | LPAR Expr RPAR
   83      | MethodInvocation
   84      | ParseArgs
   85      | ID
   86      | ID DOTLENGTH
   87      | INTLIT
   88      | REALLIT
   89      | BOOLLIT
   90      | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 12 49 55 60 90
    ID <id> (258) 1 2 10 11 13 14 18 19 20 21 22 23 24 32 33 34 35 52 53 54 55 58 59 85 86
    INTLIT <id> (259) 87
    STRLIT <id> (260) 47
    REALLIT <id> (261) 88
    BOOLLIT <id> (262) 89
    AND (263) 68
    ASSIGN (264) 58
    STAR (265) 65
    COMMA (266) 13 14 24 34 35 56 57
    DIV (267) 66
    EQ (268) 73
    GE (269) 74
    GT (270) 75
    LBRACE (271) 1 2 26 27 36
    LE (272) 76
    LPAR (273) 18 19 20 21 37 38 39 46 47 48 52 53 54 55 59 60 82 90
    LSQ (274) 23 59
    LT (275) 77
    MINUS (276) 64 79
    MOD (277) 67
    NE (278) 78
    NOT (279) 81
    OR (280) 69
    PLUS (281) 63 80
    RBRACE (282) 1 2 26 27 36
    RPAR (283) 18 19 20 21 37 38 39 46 47 48 52 53 54 55 59 60 82 90
    RSQ (284) 23 59
    SEMICOLON (285) 5 8 10 11 12 32 33 40 41 42 43 44 45 46 47 48 49
    ARROW (286)
    LSHIFT (287) 71
    RSHIFT (288) 72
    XOR (289) 70
    BOOL (290) 15
    CLASS (291) 1 2
    DOTLENGTH (292) 86
    DOUBLE (293) 17
    ELSE (294) 37
    IF (295) 37 38
    INT (296) 16
    PRINT (297) 46 47 48
    PARSEINT (298) 59 60
    PUBLIC (299) 9 10 11
    RETURN (300) 40 41
    STATIC (301) 9 10 11
    STRING (302) 23
    VOID (303) 20 21
    WHILE (304) 39
    RESERVED (305)
    MUL (306)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    Program <no> (53)
        on left: 1 2
        on right: 0
    recPR <no> (54)
        on left: 3 4 5 6 7 8
        on right: 1 6 7 8
    MethodDecl <no> (55)
        on left: 9
        on right: 3 6
    FieldDecl <no> (56)
        on left: 10 11 12
        on right: 4 7
    recCOMMAID <no> (57)
        on left: 13 14
        on right: 10 14
    Type <no> (58)
        on left: 15 16 17
        on right: 10 11 18 19 22 24 32 33
    MethodHeader <no> (59)
        on left: 18 19 20 21
        on right: 9
    FormalParams <no> (60)
        on left: 22 23
        on right: 18 20
    recFP <no> (61)
        on left: 24 25
        on right: 22 24
    MethodBody <no> (62)
        on left: 26 27
        on right: 9
    recMD <no> (63)
        on left: 28 29 30 31
        on right: 26 30 31
    VarDecl <no> (64)
        on left: 32 33
        on right: 29 31
    recVAR <no> (65)
        on left: 34 35
        on right: 32 35
    Statement <no> (66)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 28 30 37 38 39 50
    recSTAT <no> (67)
        on left: 50 51
        on right: 36 50
    MethodInvocation <no> (68)
        on left: 52 53 54 55
        on right: 42 83
    recCOMMAEXP <no> (69)
        on left: 56 57
        on right: 52 56
    Assignment <no> (70)
        on left: 58
        on right: 43 61
    ParseArgs <no> (71)
        on left: 59 60
        on right: 44 84
    Expr <no> (72)
        on left: 61 62
        on right: 37 38 39 40 46 52 53 56 57 58 59 82
    Expr2 <no> (73)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
        on right: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE recPR RBRACE
    2        | CLASS • ID LBRACE RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE recPR RBRACE
    2        | CLASS ID • LBRACE RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • recPR RBRACE
    2        | CLASS ID LBRACE • RBRACE

    error      shift, and go to state 6
    RBRACE     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    PUBLIC     shift, and go to state 9

    recPR       go to state 10
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 6

   12 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 13


State 7

    2 Program: CLASS ID LBRACE RBRACE •

    $default  reduce using rule 2 (Program)


State 8

    5 recPR: SEMICOLON •
    8      | SEMICOLON • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 8
    PUBLIC     shift, and go to state 9

    RBRACE  reduce using rule 5 (recPR)

    recPR       go to state 14
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 9

    9 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
   10 FieldDecl: PUBLIC • STATIC Type ID recCOMMAID SEMICOLON
   11          | PUBLIC • STATIC Type ID SEMICOLON

    STATIC  shift, and go to state 15


State 10

    1 Program: CLASS ID LBRACE recPR • RBRACE

    RBRACE  shift, and go to state 16


State 11

    3 recPR: MethodDecl •
    6      | MethodDecl • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 8
    PUBLIC     shift, and go to state 9

    RBRACE  reduce using rule 3 (recPR)

    recPR       go to state 17
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 12

    4 recPR: FieldDecl •
    7      | FieldDecl • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 8
    PUBLIC     shift, and go to state 9

    RBRACE  reduce using rule 4 (recPR)

    recPR       go to state 18
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 13

   12 FieldDecl: error SEMICOLON •

    $default  reduce using rule 12 (FieldDecl)


State 14

    8 recPR: SEMICOLON recPR •

    $default  reduce using rule 8 (recPR)


State 15

    9 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
   10 FieldDecl: PUBLIC STATIC • Type ID recCOMMAID SEMICOLON
   11          | PUBLIC STATIC • Type ID SEMICOLON

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    VOID    shift, and go to state 22

    Type          go to state 23
    MethodHeader  go to state 24


State 16

    1 Program: CLASS ID LBRACE recPR RBRACE •

    $default  reduce using rule 1 (Program)


State 17

    6 recPR: MethodDecl recPR •

    $default  reduce using rule 6 (recPR)


State 18

    7 recPR: FieldDecl recPR •

    $default  reduce using rule 7 (recPR)


State 19

   15 Type: BOOL •

    $default  reduce using rule 15 (Type)


State 20

   17 Type: DOUBLE •

    $default  reduce using rule 17 (Type)


State 21

   16 Type: INT •

    $default  reduce using rule 16 (Type)


State 22

   20 MethodHeader: VOID • ID LPAR FormalParams RPAR
   21             | VOID • ID LPAR RPAR

    ID  shift, and go to state 25


State 23

   10 FieldDecl: PUBLIC STATIC Type • ID recCOMMAID SEMICOLON
   11          | PUBLIC STATIC Type • ID SEMICOLON
   18 MethodHeader: Type • ID LPAR FormalParams RPAR
   19             | Type • ID LPAR RPAR

    ID  shift, and go to state 26


State 24

    9 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 27

    MethodBody  go to state 28


State 25

   20 MethodHeader: VOID ID • LPAR FormalParams RPAR
   21             | VOID ID • LPAR RPAR

    LPAR  shift, and go to state 29


State 26

   10 FieldDecl: PUBLIC STATIC Type ID • recCOMMAID SEMICOLON
   11          | PUBLIC STATIC Type ID • SEMICOLON
   18 MethodHeader: Type ID • LPAR FormalParams RPAR
   19             | Type ID • LPAR RPAR

    COMMA      shift, and go to state 30
    LPAR       shift, and go to state 31
    SEMICOLON  shift, and go to state 32

    recCOMMAID  go to state 33


State 27

   26 MethodBody: LBRACE • recMD RBRACE
   27           | LBRACE • RBRACE

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    RBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    IF         shift, and go to state 39
    INT        shift, and go to state 21
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    Type              go to state 44
    recMD             go to state 45
    VarDecl           go to state 46
    Statement         go to state 47
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 28

    9 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 9 (MethodDecl)


State 29

   20 MethodHeader: VOID ID LPAR • FormalParams RPAR
   21             | VOID ID LPAR • RPAR

    RPAR    shift, and go to state 51
    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 52

    Type          go to state 53
    FormalParams  go to state 54


State 30

   13 recCOMMAID: COMMA • ID
   14           | COMMA • ID recCOMMAID

    ID  shift, and go to state 55


State 31

   18 MethodHeader: Type ID LPAR • FormalParams RPAR
   19             | Type ID LPAR • RPAR

    RPAR    shift, and go to state 56
    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 52

    Type          go to state 53
    FormalParams  go to state 57


State 32

   11 FieldDecl: PUBLIC STATIC Type ID SEMICOLON •

    $default  reduce using rule 11 (FieldDecl)


State 33

   10 FieldDecl: PUBLIC STATIC Type ID recCOMMAID • SEMICOLON

    SEMICOLON  shift, and go to state 58


State 34

   49 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 59


State 35

   52 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   53                 | ID • LPAR Expr RPAR
   54                 | ID • LPAR RPAR
   55                 | ID • LPAR error RPAR
   58 Assignment: ID • ASSIGN Expr

    ASSIGN  shift, and go to state 60
    LPAR    shift, and go to state 61


State 36

   36 Statement: LBRACE • recSTAT RBRACE

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    RBRACE  reduce using rule 51 (recSTAT)

    Statement         go to state 62
    recSTAT           go to state 63
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 37

   27 MethodBody: LBRACE RBRACE •

    $default  reduce using rule 27 (MethodBody)


State 38

   45 Statement: SEMICOLON •

    $default  reduce using rule 45 (Statement)


State 39

   37 Statement: IF • LPAR Expr RPAR Statement ELSE Statement
   38          | IF • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 64


State 40

   46 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   47          | PRINT • LPAR STRLIT RPAR SEMICOLON
   48          | PRINT • LPAR RPAR SEMICOLON

    LPAR  shift, and go to state 65


State 41

   59 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   60          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 66


State 42

   40 Statement: RETURN • Expr SEMICOLON
   41          | RETURN • SEMICOLON

    ID         shift, and go to state 67
    INTLIT     shift, and go to state 68
    REALLIT    shift, and go to state 69
    BOOLLIT    shift, and go to state 70
    LPAR       shift, and go to state 71
    MINUS      shift, and go to state 72
    NOT        shift, and go to state 73
    PLUS       shift, and go to state 74
    SEMICOLON  shift, and go to state 75
    PARSEINT   shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 79
    Expr2             go to state 80


State 43

   39 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 81


State 44

   32 VarDecl: Type • ID recVAR SEMICOLON
   33        | Type • ID SEMICOLON

    ID  shift, and go to state 82


State 45

   26 MethodBody: LBRACE recMD • RBRACE

    RBRACE  shift, and go to state 83


State 46

   29 recMD: VarDecl •
   31      | VarDecl • recMD

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    IF         shift, and go to state 39
    INT        shift, and go to state 21
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    RBRACE  reduce using rule 29 (recMD)

    Type              go to state 44
    recMD             go to state 84
    VarDecl           go to state 46
    Statement         go to state 47
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 47

   28 recMD: Statement •
   30      | Statement • recMD

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    IF         shift, and go to state 39
    INT        shift, and go to state 21
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    RBRACE  reduce using rule 28 (recMD)

    Type              go to state 44
    recMD             go to state 85
    VarDecl           go to state 46
    Statement         go to state 47
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 48

   42 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 49

   43 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 50

   44 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 51

   21 MethodHeader: VOID ID LPAR RPAR •

    $default  reduce using rule 21 (MethodHeader)


State 52

   23 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 89


State 53

   22 FormalParams: Type • ID recFP

    ID  shift, and go to state 90


State 54

   20 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 91


State 55

   13 recCOMMAID: COMMA ID •
   14           | COMMA ID • recCOMMAID

    COMMA  shift, and go to state 30

    $default  reduce using rule 13 (recCOMMAID)

    recCOMMAID  go to state 92


State 56

   19 MethodHeader: Type ID LPAR RPAR •

    $default  reduce using rule 19 (MethodHeader)


State 57

   18 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 93


State 58

   10 FieldDecl: PUBLIC STATIC Type ID recCOMMAID SEMICOLON •

    $default  reduce using rule 10 (FieldDecl)


State 59

   49 Statement: error SEMICOLON •

    $default  reduce using rule 49 (Statement)


State 60

   58 Assignment: ID ASSIGN • Expr

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 94
    Expr2             go to state 80


State 61

   52 MethodInvocation: ID LPAR • Expr recCOMMAEXP RPAR
   53                 | ID LPAR • Expr RPAR
   54                 | ID LPAR • RPAR
   55                 | ID LPAR • error RPAR

    error     shift, and go to state 95
    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    RPAR      shift, and go to state 96
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 97
    Expr2             go to state 80


State 62

   50 recSTAT: Statement • recSTAT

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    RBRACE  reduce using rule 51 (recSTAT)

    Statement         go to state 62
    recSTAT           go to state 98
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 63

   36 Statement: LBRACE recSTAT • RBRACE

    RBRACE  shift, and go to state 99


State 64

   37 Statement: IF LPAR • Expr RPAR Statement ELSE Statement
   38          | IF LPAR • Expr RPAR Statement

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 100
    Expr2             go to state 80


State 65

   46 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   47          | PRINT LPAR • STRLIT RPAR SEMICOLON
   48          | PRINT LPAR • RPAR SEMICOLON

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    STRLIT    shift, and go to state 101
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    RPAR      shift, and go to state 102
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 103
    Expr2             go to state 80


State 66

   59 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   60          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 104
    ID     shift, and go to state 105


State 67

   52 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   53                 | ID • LPAR Expr RPAR
   54                 | ID • LPAR RPAR
   55                 | ID • LPAR error RPAR
   58 Assignment: ID • ASSIGN Expr
   85 Expr2: ID •
   86      | ID • DOTLENGTH

    ASSIGN     shift, and go to state 60
    LPAR       shift, and go to state 61
    DOTLENGTH  shift, and go to state 106

    $default  reduce using rule 85 (Expr2)


State 68

   87 Expr2: INTLIT •

    $default  reduce using rule 87 (Expr2)


State 69

   88 Expr2: REALLIT •

    $default  reduce using rule 88 (Expr2)


State 70

   89 Expr2: BOOLLIT •

    $default  reduce using rule 89 (Expr2)


State 71

   82 Expr2: LPAR • Expr RPAR
   90      | LPAR • error RPAR

    error     shift, and go to state 107
    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 108
    Expr2             go to state 80


State 72

   79 Expr2: MINUS • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 110


State 73

   81 Expr2: NOT • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 111


State 74

   80 Expr2: PLUS • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 112


State 75

   41 Statement: RETURN SEMICOLON •

    $default  reduce using rule 41 (Statement)


State 76

   83 Expr2: MethodInvocation •

    $default  reduce using rule 83 (Expr2)


State 77

   61 Expr: Assignment •

    $default  reduce using rule 61 (Expr)


State 78

   84 Expr2: ParseArgs •

    $default  reduce using rule 84 (Expr2)


State 79

   40 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 113


State 80

   62 Expr: Expr2 •
   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    AND     shift, and go to state 114
    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    OR      shift, and go to state 125
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 62 (Expr)


State 81

   39 Statement: WHILE LPAR • Expr RPAR Statement

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 130
    Expr2             go to state 80


State 82

   32 VarDecl: Type ID • recVAR SEMICOLON
   33        | Type ID • SEMICOLON

    COMMA      shift, and go to state 131
    SEMICOLON  shift, and go to state 132

    recVAR  go to state 133


State 83

   26 MethodBody: LBRACE recMD RBRACE •

    $default  reduce using rule 26 (MethodBody)


State 84

   31 recMD: VarDecl recMD •

    $default  reduce using rule 31 (recMD)


State 85

   30 recMD: Statement recMD •

    $default  reduce using rule 30 (recMD)


State 86

   42 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 42 (Statement)


State 87

   43 Statement: Assignment SEMICOLON •

    $default  reduce using rule 43 (Statement)


State 88

   44 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 44 (Statement)


State 89

   23 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 134


State 90

   22 FormalParams: Type ID • recFP

    COMMA  shift, and go to state 135

    $default  reduce using rule 25 (recFP)

    recFP  go to state 136


State 91

   20 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 20 (MethodHeader)


State 92

   14 recCOMMAID: COMMA ID recCOMMAID •

    $default  reduce using rule 14 (recCOMMAID)


State 93

   18 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 18 (MethodHeader)


State 94

   58 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 58 (Assignment)


State 95

   55 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 137


State 96

   54 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 54 (MethodInvocation)


State 97

   52 MethodInvocation: ID LPAR Expr • recCOMMAEXP RPAR
   53                 | ID LPAR Expr • RPAR

    COMMA  shift, and go to state 138
    RPAR   shift, and go to state 139

    recCOMMAEXP  go to state 140


State 98

   50 recSTAT: Statement recSTAT •

    $default  reduce using rule 50 (recSTAT)


State 99

   36 Statement: LBRACE recSTAT RBRACE •

    $default  reduce using rule 36 (Statement)


State 100

   37 Statement: IF LPAR Expr • RPAR Statement ELSE Statement
   38          | IF LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 141


State 101

   47 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 142


State 102

   48 Statement: PRINT LPAR RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 103

   46 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 144


State 104

   60 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 145


State 105

   59 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 146


State 106

   86 Expr2: ID DOTLENGTH •

    $default  reduce using rule 86 (Expr2)


State 107

   90 Expr2: LPAR error • RPAR

    RPAR  shift, and go to state 147


State 108

   82 Expr2: LPAR Expr • RPAR

    RPAR  shift, and go to state 148


State 109

   52 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   53                 | ID • LPAR Expr RPAR
   54                 | ID • LPAR RPAR
   55                 | ID • LPAR error RPAR
   85 Expr2: ID •
   86      | ID • DOTLENGTH

    LPAR       shift, and go to state 61
    DOTLENGTH  shift, and go to state 106

    $default  reduce using rule 85 (Expr2)


State 110

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2
   79      | MINUS Expr2 •

    $default  reduce using rule 79 (Expr2)


State 111

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2
   81      | NOT Expr2 •

    $default  reduce using rule 81 (Expr2)


State 112

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2
   80      | PLUS Expr2 •

    $default  reduce using rule 80 (Expr2)


State 113

   40 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 114

   68 Expr2: Expr2 AND • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 149


State 115

   65 Expr2: Expr2 STAR • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 150


State 116

   66 Expr2: Expr2 DIV • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 151


State 117

   73 Expr2: Expr2 EQ • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 152


State 118

   74 Expr2: Expr2 GE • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 153


State 119

   75 Expr2: Expr2 GT • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 154


State 120

   76 Expr2: Expr2 LE • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 155


State 121

   77 Expr2: Expr2 LT • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 156


State 122

   64 Expr2: Expr2 MINUS • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 157


State 123

   67 Expr2: Expr2 MOD • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 158


State 124

   78 Expr2: Expr2 NE • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 159


State 125

   69 Expr2: Expr2 OR • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 160


State 126

   63 Expr2: Expr2 PLUS • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 161


State 127

   71 Expr2: Expr2 LSHIFT • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 162


State 128

   72 Expr2: Expr2 RSHIFT • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 163


State 129

   70 Expr2: Expr2 XOR • Expr2

    ID        shift, and go to state 109
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    ParseArgs         go to state 78
    Expr2             go to state 164


State 130

   39 Statement: WHILE LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 165


State 131

   34 recVAR: COMMA • ID
   35       | COMMA • ID recVAR

    ID  shift, and go to state 166


State 132

   33 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 33 (VarDecl)


State 133

   32 VarDecl: Type ID recVAR • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 134

   23 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 168


State 135

   24 recFP: COMMA • Type ID recFP

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21

    Type  go to state 169


State 136

   22 FormalParams: Type ID recFP •

    $default  reduce using rule 22 (FormalParams)


State 137

   55 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 55 (MethodInvocation)


State 138

   57 recCOMMAEXP: COMMA • Expr

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 170
    Expr2             go to state 80


State 139

   53 MethodInvocation: ID LPAR Expr RPAR •

    $default  reduce using rule 53 (MethodInvocation)


State 140

   52 MethodInvocation: ID LPAR Expr recCOMMAEXP • RPAR
   56 recCOMMAEXP: recCOMMAEXP • COMMA Expr

    COMMA  shift, and go to state 171
    RPAR   shift, and go to state 172


State 141

   37 Statement: IF LPAR Expr RPAR • Statement ELSE Statement
   38          | IF LPAR Expr RPAR • Statement

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    Statement         go to state 173
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 142

   47 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 174


State 143

   48 Statement: PRINT LPAR RPAR SEMICOLON •

    $default  reduce using rule 48 (Statement)


State 144

   46 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 145

   60 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 60 (ParseArgs)


State 146

   59 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 176
    Expr2             go to state 80


State 147

   90 Expr2: LPAR error RPAR •

    $default  reduce using rule 90 (Expr2)


State 148

   82 Expr2: LPAR Expr RPAR •

    $default  reduce using rule 82 (Expr2)


State 149

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   68      | Expr2 AND Expr2 •
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 68 (Expr2)


State 150

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   65      | Expr2 STAR Expr2 •
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    $default  reduce using rule 65 (Expr2)


State 151

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   66      | Expr2 DIV Expr2 •
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 66 (Expr2)


State 152

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   73      | Expr2 EQ Expr2 •
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 73 (Expr2)


State 153

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   74      | Expr2 GE Expr2 •
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 74 (Expr2)


State 154

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   75      | Expr2 GT Expr2 •
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 75 (Expr2)


State 155

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   76      | Expr2 LE Expr2 •
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 76 (Expr2)


State 156

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   77      | Expr2 LT Expr2 •
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 77 (Expr2)


State 157

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   64      | Expr2 MINUS Expr2 •
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MOD     shift, and go to state 123
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 64 (Expr2)


State 158

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   67      | Expr2 MOD Expr2 •
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 67 (Expr2)


State 159

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2
   78      | Expr2 NE Expr2 •

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 78 (Expr2)


State 160

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   69      | Expr2 OR Expr2 •
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    AND     shift, and go to state 114
    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 69 (Expr2)


State 161

   63 Expr2: Expr2 • PLUS Expr2
   63      | Expr2 PLUS Expr2 •
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MOD     shift, and go to state 123
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 63 (Expr2)


State 162

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   71      | Expr2 LSHIFT Expr2 •
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    $default  reduce using rule 71 (Expr2)


State 163

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   72      | Expr2 RSHIFT Expr2 •
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    $default  reduce using rule 72 (Expr2)


State 164

   63 Expr2: Expr2 • PLUS Expr2
   64      | Expr2 • MINUS Expr2
   65      | Expr2 • STAR Expr2
   66      | Expr2 • DIV Expr2
   67      | Expr2 • MOD Expr2
   68      | Expr2 • AND Expr2
   69      | Expr2 • OR Expr2
   70      | Expr2 • XOR Expr2
   70      | Expr2 XOR Expr2 •
   71      | Expr2 • LSHIFT Expr2
   72      | Expr2 • RSHIFT Expr2
   73      | Expr2 • EQ Expr2
   74      | Expr2 • GE Expr2
   75      | Expr2 • GT Expr2
   76      | Expr2 • LE Expr2
   77      | Expr2 • LT Expr2
   78      | Expr2 • NE Expr2

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 70 (Expr2)


State 165

   39 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    Statement         go to state 177
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 166

   34 recVAR: COMMA ID •
   35       | COMMA ID • recVAR

    COMMA  shift, and go to state 131

    $default  reduce using rule 34 (recVAR)

    recVAR  go to state 178


State 167

   32 VarDecl: Type ID recVAR SEMICOLON •

    $default  reduce using rule 32 (VarDecl)


State 168

   23 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 23 (FormalParams)


State 169

   24 recFP: COMMA Type • ID recFP

    ID  shift, and go to state 179


State 170

   57 recCOMMAEXP: COMMA Expr •

    $default  reduce using rule 57 (recCOMMAEXP)


State 171

   56 recCOMMAEXP: recCOMMAEXP COMMA • Expr

    ID        shift, and go to state 67
    INTLIT    shift, and go to state 68
    REALLIT   shift, and go to state 69
    BOOLLIT   shift, and go to state 70
    LPAR      shift, and go to state 71
    MINUS     shift, and go to state 72
    NOT       shift, and go to state 73
    PLUS      shift, and go to state 74
    PARSEINT  shift, and go to state 41

    MethodInvocation  go to state 76
    Assignment        go to state 77
    ParseArgs         go to state 78
    Expr              go to state 180
    Expr2             go to state 80


State 172

   52 MethodInvocation: ID LPAR Expr recCOMMAEXP RPAR •

    $default  reduce using rule 52 (MethodInvocation)


State 173

   37 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
   38          | IF LPAR Expr RPAR Statement •

    ELSE  shift, and go to state 181

    $default  reduce using rule 38 (Statement)


State 174

   47 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 47 (Statement)


State 175

   46 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 46 (Statement)


State 176

   59 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 182


State 177

   39 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 39 (Statement)


State 178

   35 recVAR: COMMA ID recVAR •

    $default  reduce using rule 35 (recVAR)


State 179

   24 recFP: COMMA Type ID • recFP

    COMMA  shift, and go to state 135

    $default  reduce using rule 25 (recFP)

    recFP  go to state 183


State 180

   56 recCOMMAEXP: recCOMMAEXP COMMA Expr •

    $default  reduce using rule 56 (recCOMMAEXP)


State 181

   37 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 34
    ID         shift, and go to state 35
    LBRACE     shift, and go to state 36
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    PRINT      shift, and go to state 40
    PARSEINT   shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43

    Statement         go to state 184
    MethodInvocation  go to state 48
    Assignment        go to state 49
    ParseArgs         go to state 50


State 182

   59 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 185


State 183

   24 recFP: COMMA Type ID recFP •

    $default  reduce using rule 24 (recFP)


State 184

   37 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 37 (Statement)


State 185

   59 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 59 (ParseArgs)
