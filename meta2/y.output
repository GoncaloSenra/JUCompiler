Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE recPR RBRACE

    2 recPR: MethodDecl recPR
    3      | FieldDecl recPR
    4      | SEMICOLON recPR
    5      | ε

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID recCOMMAID SEMICOLON
    8          | error SEMICOLON

    9 recCOMMAID: COMMA ID recCOMMAID
   10           | ε

   11 Type: BOOL
   12     | INT
   13     | DOUBLE

   14 MethodHeader: Type ID LPAR FormalParams RPAR
   15             | Type ID LPAR RPAR
   16             | VOID ID LPAR FormalParams RPAR
   17             | VOID ID LPAR RPAR

   18 FormalParams: Type ID recFP
   19             | STRING LSQ RSQ ID

   20 recFP: COMMA Type ID recFP
   21      | ε

   22 MethodBody: LBRACE recMD RBRACE

   23 recMD: Statement recMD
   24      | VarDecl recMD
   25      | ε

   26 VarDecl: Type ID recVAR SEMICOLON

   27 recVAR: COMMA ID recVAR
   28       | ε

   29 Statement: LBRACE recSTAT RBRACE
   30          | IF LPAR Expr RPAR Statement ELSE Statement
   31          | IF LPAR Expr RPAR Statement
   32          | WHILE LPAR Expr RPAR Statement
   33          | RETURN Expr SEMICOLON
   34          | RETURN SEMICOLON
   35          | recSEMICOLON SEMICOLON
   36          | SEMICOLON
   37          | PRINT LPAR Expr RPAR SEMICOLON
   38          | PRINT LPAR STRLIT RPAR SEMICOLON
   39          | PRINT LPAR RPAR SEMICOLON
   40          | error SEMICOLON

   41 recSEMICOLON: ParseArgs
   42             | Assignment
   43             | MethodInvocation

   44 recSTAT: Statement recSTAT
   45        | ε

   46 MethodInvocation: ID LPAR Expr recCOMMAEXP RPAR
   47                 | ID LPAR RPAR
   48                 | ID LPAR error RPAR

   49 recCOMMAEXP: COMMA Expr recCOMMAEXP
   50            | ε

   51 Assignment: ID ASSIGN Expr

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   53          | PARSEINT LPAR error RPAR

   54 Expr: Assignment
   55     | Expr2

   56 Expr2: Expr2 PLUS Expr2
   57      | Expr2 MINUS Expr2
   58      | Expr2 STAR Expr2
   59      | Expr2 DIV Expr2
   60      | Expr2 MOD Expr2
   61      | Expr2 AND Expr2
   62      | Expr2 OR Expr2
   63      | Expr2 XOR Expr2
   64      | Expr2 LSHIFT Expr2
   65      | Expr2 RSHIFT Expr2
   66      | Expr2 EQ Expr2
   67      | Expr2 GE Expr2
   68      | Expr2 GT Expr2
   69      | Expr2 LE Expr2
   70      | Expr2 LT Expr2
   71      | Expr2 NE Expr2
   72      | MINUS Expr2
   73      | PLUS Expr2
   74      | NOT Expr2
   75      | LPAR Expr RPAR
   76      | MethodInvocation
   77      | ParseArgs
   78      | ID
   79      | ID DOTLENGTH
   80      | INTLIT
   81      | REALLIT
   82      | BOOLLIT
   83      | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8 40 48 53 83
    ID <id> (258) 1 7 9 14 15 16 17 18 19 20 26 27 46 47 48 51 52 78 79
    INTLIT <id> (259) 80
    STRLIT <id> (260) 38
    REALLIT <id> (261) 81
    BOOLLIT <id> (262) 82
    AND (263) 61
    ASSIGN (264) 51
    STAR (265) 58
    COMMA (266) 9 20 27 49
    DIV (267) 59
    EQ (268) 66
    GE (269) 67
    GT (270) 68
    LBRACE (271) 1 22 29
    LE (272) 69
    LPAR (273) 14 15 16 17 30 31 32 37 38 39 46 47 48 52 53 75 83
    LSQ (274) 19 52
    LT (275) 70
    MINUS (276) 57 72
    MOD (277) 60
    NE (278) 71
    NOT (279) 74
    OR (280) 62
    PLUS (281) 56 73
    RBRACE (282) 1 22 29
    RPAR (283) 14 15 16 17 30 31 32 37 38 39 46 47 48 52 53 75 83
    RSQ (284) 19 52
    SEMICOLON (285) 4 7 8 26 33 34 35 36 37 38 39 40
    ARROW (286)
    LSHIFT (287) 64
    RSHIFT (288) 65
    XOR (289) 63
    BOOL (290) 11
    CLASS (291) 1
    DOTLENGTH (292) 79
    DOUBLE (293) 13
    ELSE (294) 30
    IF (295) 30 31
    INT (296) 12
    PRINT (297) 37 38 39
    PARSEINT (298) 52 53
    PUBLIC (299) 6 7
    RETURN (300) 33 34
    STATIC (301) 6 7
    STRING (302) 19
    VOID (303) 16 17
    WHILE (304) 32
    RESERVED (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <no> (52)
        on left: 1
        on right: 0
    recPR <no> (53)
        on left: 2 3 4 5
        on right: 1 2 3 4
    MethodDecl <no> (54)
        on left: 6
        on right: 2
    FieldDecl <no> (55)
        on left: 7 8
        on right: 3
    recCOMMAID <no> (56)
        on left: 9 10
        on right: 7 9
    Type <no> (57)
        on left: 11 12 13
        on right: 7 14 15 18 20 26
    MethodHeader <no> (58)
        on left: 14 15 16 17
        on right: 6
    FormalParams <no> (59)
        on left: 18 19
        on right: 14 16
    recFP <no> (60)
        on left: 20 21
        on right: 18 20
    MethodBody <no> (61)
        on left: 22
        on right: 6
    recMD <no> (62)
        on left: 23 24 25
        on right: 22 23 24
    VarDecl <no> (63)
        on left: 26
        on right: 24
    recVAR <no> (64)
        on left: 27 28
        on right: 26 27
    Statement <no> (65)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 23 30 31 32 44
    recSEMICOLON <no> (66)
        on left: 41 42 43
        on right: 35
    recSTAT <no> (67)
        on left: 44 45
        on right: 29 44
    MethodInvocation <no> (68)
        on left: 46 47 48
        on right: 43 76
    recCOMMAEXP <no> (69)
        on left: 49 50
        on right: 46 49
    Assignment <no> (70)
        on left: 51
        on right: 42 54
    ParseArgs <no> (71)
        on left: 52 53
        on right: 41 77
    Expr <no> (72)
        on left: 54 55
        on right: 30 31 32 33 37 46 49 51 52 75
    Expr2 <no> (73)
        on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
        on right: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE recPR RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE recPR RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • recPR RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (recPR)

    recPR       go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    8 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    4 recPR: SEMICOLON • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (recPR)

    recPR       go to state 13
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 8

    6 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC • STATIC Type ID recCOMMAID SEMICOLON

    STATIC  shift, and go to state 14


State 9

    1 Program: CLASS ID LBRACE recPR • RBRACE

    RBRACE  shift, and go to state 15


State 10

    2 recPR: MethodDecl • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (recPR)

    recPR       go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    3 recPR: FieldDecl • recPR

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (recPR)

    recPR       go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

    8 FieldDecl: error SEMICOLON •

    $default  reduce using rule 8 (FieldDecl)


State 13

    4 recPR: SEMICOLON recPR •

    $default  reduce using rule 4 (recPR)


State 14

    6 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC • Type ID recCOMMAID SEMICOLON

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 15

    1 Program: CLASS ID LBRACE recPR RBRACE •

    $default  reduce using rule 1 (Program)


State 16

    2 recPR: MethodDecl recPR •

    $default  reduce using rule 2 (recPR)


State 17

    3 recPR: FieldDecl recPR •

    $default  reduce using rule 3 (recPR)


State 18

   11 Type: BOOL •

    $default  reduce using rule 11 (Type)


State 19

   13 Type: DOUBLE •

    $default  reduce using rule 13 (Type)


State 20

   12 Type: INT •

    $default  reduce using rule 12 (Type)


State 21

   16 MethodHeader: VOID • ID LPAR FormalParams RPAR
   17             | VOID • ID LPAR RPAR

    ID  shift, and go to state 24


State 22

    7 FieldDecl: PUBLIC STATIC Type • ID recCOMMAID SEMICOLON
   14 MethodHeader: Type • ID LPAR FormalParams RPAR
   15             | Type • ID LPAR RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   16 MethodHeader: VOID ID • LPAR FormalParams RPAR
   17             | VOID ID • LPAR RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID • recCOMMAID SEMICOLON
   14 MethodHeader: Type ID • LPAR FormalParams RPAR
   15             | Type ID • LPAR RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 10 (recCOMMAID)

    recCOMMAID  go to state 31


State 26

   22 MethodBody: LBRACE • recMD RBRACE

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    BOOL       shift, and go to state 18
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 36
    INT        shift, and go to state 20
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (recMD)

    Type              go to state 41
    recMD             go to state 42
    VarDecl           go to state 43
    Statement         go to state 44
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 6 (MethodDecl)


State 28

   16 MethodHeader: VOID ID LPAR • FormalParams RPAR
   17             | VOID ID LPAR • RPAR

    RPAR    shift, and go to state 49
    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 50

    Type          go to state 51
    FormalParams  go to state 52


State 29

    9 recCOMMAID: COMMA • ID recCOMMAID

    ID  shift, and go to state 53


State 30

   14 MethodHeader: Type ID LPAR • FormalParams RPAR
   15             | Type ID LPAR • RPAR

    RPAR    shift, and go to state 54
    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 50

    Type          go to state 51
    FormalParams  go to state 55


State 31

    7 FieldDecl: PUBLIC STATIC Type ID recCOMMAID • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 32

   40 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 33

   46 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   47                 | ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   51 Assignment: ID • ASSIGN Expr

    ASSIGN  shift, and go to state 58
    LPAR    shift, and go to state 59


State 34

   29 Statement: LBRACE • recSTAT RBRACE

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 45 (recSTAT)

    Statement         go to state 60
    recSEMICOLON      go to state 45
    recSTAT           go to state 61
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 35

   36 Statement: SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 36

   30 Statement: IF • LPAR Expr RPAR Statement ELSE Statement
   31          | IF • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 62


State 37

   37 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   38          | PRINT • LPAR STRLIT RPAR SEMICOLON
   39          | PRINT • LPAR RPAR SEMICOLON

    LPAR  shift, and go to state 63


State 38

   52 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   53          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 64


State 39

   33 Statement: RETURN • Expr SEMICOLON
   34          | RETURN • SEMICOLON

    ID         shift, and go to state 65
    INTLIT     shift, and go to state 66
    REALLIT    shift, and go to state 67
    BOOLLIT    shift, and go to state 68
    LPAR       shift, and go to state 69
    MINUS      shift, and go to state 70
    NOT        shift, and go to state 71
    PLUS       shift, and go to state 72
    SEMICOLON  shift, and go to state 73
    PARSEINT   shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 77
    Expr2             go to state 78


State 40

   32 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 79


State 41

   26 VarDecl: Type • ID recVAR SEMICOLON

    ID  shift, and go to state 80


State 42

   22 MethodBody: LBRACE recMD • RBRACE

    RBRACE  shift, and go to state 81


State 43

   24 recMD: VarDecl • recMD

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    BOOL       shift, and go to state 18
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 36
    INT        shift, and go to state 20
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (recMD)

    Type              go to state 41
    recMD             go to state 82
    VarDecl           go to state 43
    Statement         go to state 44
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 44

   23 recMD: Statement • recMD

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    BOOL       shift, and go to state 18
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 36
    INT        shift, and go to state 20
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (recMD)

    Type              go to state 41
    recMD             go to state 83
    VarDecl           go to state 43
    Statement         go to state 44
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 45

   35 Statement: recSEMICOLON • SEMICOLON

    SEMICOLON  shift, and go to state 84


State 46

   43 recSEMICOLON: MethodInvocation •

    $default  reduce using rule 43 (recSEMICOLON)


State 47

   42 recSEMICOLON: Assignment •

    $default  reduce using rule 42 (recSEMICOLON)


State 48

   41 recSEMICOLON: ParseArgs •

    $default  reduce using rule 41 (recSEMICOLON)


State 49

   17 MethodHeader: VOID ID LPAR RPAR •

    $default  reduce using rule 17 (MethodHeader)


State 50

   19 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 85


State 51

   18 FormalParams: Type • ID recFP

    ID  shift, and go to state 86


State 52

   16 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 87


State 53

    9 recCOMMAID: COMMA ID • recCOMMAID

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (recCOMMAID)

    recCOMMAID  go to state 88


State 54

   15 MethodHeader: Type ID LPAR RPAR •

    $default  reduce using rule 15 (MethodHeader)


State 55

   14 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 89


State 56

    7 FieldDecl: PUBLIC STATIC Type ID recCOMMAID SEMICOLON •

    $default  reduce using rule 7 (FieldDecl)


State 57

   40 Statement: error SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 58

   51 Assignment: ID ASSIGN • Expr

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 90
    Expr2             go to state 78


State 59

   46 MethodInvocation: ID LPAR • Expr recCOMMAEXP RPAR
   47                 | ID LPAR • RPAR
   48                 | ID LPAR • error RPAR

    error     shift, and go to state 91
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    RPAR      shift, and go to state 92
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 93
    Expr2             go to state 78


State 60

   44 recSTAT: Statement • recSTAT

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 45 (recSTAT)

    Statement         go to state 60
    recSEMICOLON      go to state 45
    recSTAT           go to state 94
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 61

   29 Statement: LBRACE recSTAT • RBRACE

    RBRACE  shift, and go to state 95


State 62

   30 Statement: IF LPAR • Expr RPAR Statement ELSE Statement
   31          | IF LPAR • Expr RPAR Statement

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 96
    Expr2             go to state 78


State 63

   37 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   38          | PRINT LPAR • STRLIT RPAR SEMICOLON
   39          | PRINT LPAR • RPAR SEMICOLON

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    STRLIT    shift, and go to state 97
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    RPAR      shift, and go to state 98
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 99
    Expr2             go to state 78


State 64

   52 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   53          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 100
    ID     shift, and go to state 101


State 65

   46 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   47                 | ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   51 Assignment: ID • ASSIGN Expr
   78 Expr2: ID •
   79      | ID • DOTLENGTH

    ASSIGN     shift, and go to state 58
    LPAR       shift, and go to state 59
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 78 (Expr2)


State 66

   80 Expr2: INTLIT •

    $default  reduce using rule 80 (Expr2)


State 67

   81 Expr2: REALLIT •

    $default  reduce using rule 81 (Expr2)


State 68

   82 Expr2: BOOLLIT •

    $default  reduce using rule 82 (Expr2)


State 69

   75 Expr2: LPAR • Expr RPAR
   83      | LPAR • error RPAR

    error     shift, and go to state 103
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 104
    Expr2             go to state 78


State 70

   72 Expr2: MINUS • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 106


State 71

   74 Expr2: NOT • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 107


State 72

   73 Expr2: PLUS • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 108


State 73

   34 Statement: RETURN SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 74

   76 Expr2: MethodInvocation •

    $default  reduce using rule 76 (Expr2)


State 75

   54 Expr: Assignment •

    $default  reduce using rule 54 (Expr)


State 76

   77 Expr2: ParseArgs •

    $default  reduce using rule 77 (Expr2)


State 77

   33 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 78

   55 Expr: Expr2 •
   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    AND     shift, and go to state 110
    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    EQ      shift, and go to state 113
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    NE      shift, and go to state 120
    OR      shift, and go to state 121
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124
    XOR     shift, and go to state 125

    $default  reduce using rule 55 (Expr)


State 79

   32 Statement: WHILE LPAR • Expr RPAR Statement

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 126
    Expr2             go to state 78


State 80

   26 VarDecl: Type ID • recVAR SEMICOLON

    COMMA  shift, and go to state 127

    $default  reduce using rule 28 (recVAR)

    recVAR  go to state 128


State 81

   22 MethodBody: LBRACE recMD RBRACE •

    $default  reduce using rule 22 (MethodBody)


State 82

   24 recMD: VarDecl recMD •

    $default  reduce using rule 24 (recMD)


State 83

   23 recMD: Statement recMD •

    $default  reduce using rule 23 (recMD)


State 84

   35 Statement: recSEMICOLON SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 85

   19 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 129


State 86

   18 FormalParams: Type ID • recFP

    COMMA  shift, and go to state 130

    $default  reduce using rule 21 (recFP)

    recFP  go to state 131


State 87

   16 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 16 (MethodHeader)


State 88

    9 recCOMMAID: COMMA ID recCOMMAID •

    $default  reduce using rule 9 (recCOMMAID)


State 89

   14 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 14 (MethodHeader)


State 90

   51 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 51 (Assignment)


State 91

   48 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 132


State 92

   47 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 47 (MethodInvocation)


State 93

   46 MethodInvocation: ID LPAR Expr • recCOMMAEXP RPAR

    COMMA  shift, and go to state 133

    $default  reduce using rule 50 (recCOMMAEXP)

    recCOMMAEXP  go to state 134


State 94

   44 recSTAT: Statement recSTAT •

    $default  reduce using rule 44 (recSTAT)


State 95

   29 Statement: LBRACE recSTAT RBRACE •

    $default  reduce using rule 29 (Statement)


State 96

   30 Statement: IF LPAR Expr • RPAR Statement ELSE Statement
   31          | IF LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 135


State 97

   38 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 136


State 98

   39 Statement: PRINT LPAR RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 137


State 99

   37 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 138


State 100

   53 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 139


State 101

   52 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 140


State 102

   79 Expr2: ID DOTLENGTH •

    $default  reduce using rule 79 (Expr2)


State 103

   83 Expr2: LPAR error • RPAR

    RPAR  shift, and go to state 141


State 104

   75 Expr2: LPAR Expr • RPAR

    RPAR  shift, and go to state 142


State 105

   46 MethodInvocation: ID • LPAR Expr recCOMMAEXP RPAR
   47                 | ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   78 Expr2: ID •
   79      | ID • DOTLENGTH

    LPAR       shift, and go to state 59
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 78 (Expr2)


State 106

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2
   72      | MINUS Expr2 •

    $default  reduce using rule 72 (Expr2)


State 107

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2
   74      | NOT Expr2 •

    $default  reduce using rule 74 (Expr2)


State 108

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2
   73      | PLUS Expr2 •

    $default  reduce using rule 73 (Expr2)


State 109

   33 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 110

   61 Expr2: Expr2 AND • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 143


State 111

   58 Expr2: Expr2 STAR • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 144


State 112

   59 Expr2: Expr2 DIV • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 145


State 113

   66 Expr2: Expr2 EQ • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 146


State 114

   67 Expr2: Expr2 GE • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 147


State 115

   68 Expr2: Expr2 GT • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 148


State 116

   69 Expr2: Expr2 LE • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 149


State 117

   70 Expr2: Expr2 LT • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 150


State 118

   57 Expr2: Expr2 MINUS • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 151


State 119

   60 Expr2: Expr2 MOD • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 152


State 120

   71 Expr2: Expr2 NE • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 153


State 121

   62 Expr2: Expr2 OR • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 154


State 122

   56 Expr2: Expr2 PLUS • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 155


State 123

   64 Expr2: Expr2 LSHIFT • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 156


State 124

   65 Expr2: Expr2 RSHIFT • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 157


State 125

   63 Expr2: Expr2 XOR • Expr2

    ID        shift, and go to state 105
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    ParseArgs         go to state 76
    Expr2             go to state 158


State 126

   32 Statement: WHILE LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 159


State 127

   27 recVAR: COMMA • ID recVAR

    ID  shift, and go to state 160


State 128

   26 VarDecl: Type ID recVAR • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 129

   19 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 162


State 130

   20 recFP: COMMA • Type ID recFP

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 163


State 131

   18 FormalParams: Type ID recFP •

    $default  reduce using rule 18 (FormalParams)


State 132

   48 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 48 (MethodInvocation)


State 133

   49 recCOMMAEXP: COMMA • Expr recCOMMAEXP

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 164
    Expr2             go to state 78


State 134

   46 MethodInvocation: ID LPAR Expr recCOMMAEXP • RPAR

    RPAR  shift, and go to state 165


State 135

   30 Statement: IF LPAR Expr RPAR • Statement ELSE Statement
   31          | IF LPAR Expr RPAR • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 166
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 136

   38 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 137

   39 Statement: PRINT LPAR RPAR SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 138

   37 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 168


State 139

   53 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 53 (ParseArgs)


State 140

   52 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    REALLIT   shift, and go to state 67
    BOOLLIT   shift, and go to state 68
    LPAR      shift, and go to state 69
    MINUS     shift, and go to state 70
    NOT       shift, and go to state 71
    PLUS      shift, and go to state 72
    PARSEINT  shift, and go to state 38

    MethodInvocation  go to state 74
    Assignment        go to state 75
    ParseArgs         go to state 76
    Expr              go to state 169
    Expr2             go to state 78


State 141

   83 Expr2: LPAR error RPAR •

    $default  reduce using rule 83 (Expr2)


State 142

   75 Expr2: LPAR Expr RPAR •

    $default  reduce using rule 75 (Expr2)


State 143

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   61      | Expr2 AND Expr2 •
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    EQ      shift, and go to state 113
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    NE      shift, and go to state 120
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124
    XOR     shift, and go to state 125

    $default  reduce using rule 61 (Expr2)


State 144

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   58      | Expr2 STAR Expr2 •
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    $default  reduce using rule 58 (Expr2)


State 145

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   59      | Expr2 DIV Expr2 •
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    $default  reduce using rule 59 (Expr2)


State 146

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   66      | Expr2 EQ Expr2 •
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 66 (Expr2)


State 147

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   67      | Expr2 GE Expr2 •
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 67 (Expr2)


State 148

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   68      | Expr2 GT Expr2 •
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 68 (Expr2)


State 149

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   69      | Expr2 LE Expr2 •
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 69 (Expr2)


State 150

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   70      | Expr2 LT Expr2 •
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 70 (Expr2)


State 151

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   57      | Expr2 MINUS Expr2 •
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 119

    $default  reduce using rule 57 (Expr2)


State 152

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   60      | Expr2 MOD Expr2 •
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    $default  reduce using rule 60 (Expr2)


State 153

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2
   71      | Expr2 NE Expr2 •

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 71 (Expr2)


State 154

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   62      | Expr2 OR Expr2 •
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    AND     shift, and go to state 110
    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    EQ      shift, and go to state 113
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    NE      shift, and go to state 120
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124
    XOR     shift, and go to state 125

    $default  reduce using rule 62 (Expr2)


State 155

   56 Expr2: Expr2 • PLUS Expr2
   56      | Expr2 PLUS Expr2 •
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 119

    $default  reduce using rule 56 (Expr2)


State 156

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   64      | Expr2 LSHIFT Expr2 •
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MINUS  shift, and go to state 118
    MOD    shift, and go to state 119
    PLUS   shift, and go to state 122

    $default  reduce using rule 64 (Expr2)


State 157

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   65      | Expr2 RSHIFT Expr2 •
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MINUS  shift, and go to state 118
    MOD    shift, and go to state 119
    PLUS   shift, and go to state 122

    $default  reduce using rule 65 (Expr2)


State 158

   56 Expr2: Expr2 • PLUS Expr2
   57      | Expr2 • MINUS Expr2
   58      | Expr2 • STAR Expr2
   59      | Expr2 • DIV Expr2
   60      | Expr2 • MOD Expr2
   61      | Expr2 • AND Expr2
   62      | Expr2 • OR Expr2
   63      | Expr2 • XOR Expr2
   63      | Expr2 XOR Expr2 •
   64      | Expr2 • LSHIFT Expr2
   65      | Expr2 • RSHIFT Expr2
   66      | Expr2 • EQ Expr2
   67      | Expr2 • GE Expr2
   68      | Expr2 • GT Expr2
   69      | Expr2 • LE Expr2
   70      | Expr2 • LT Expr2
   71      | Expr2 • NE Expr2

    STAR    shift, and go to state 111
    DIV     shift, and go to state 112
    EQ      shift, and go to state 113
    GE      shift, and go to state 114
    GT      shift, and go to state 115
    LE      shift, and go to state 116
    LT      shift, and go to state 117
    MINUS   shift, and go to state 118
    MOD     shift, and go to state 119
    NE      shift, and go to state 120
    PLUS    shift, and go to state 122
    LSHIFT  shift, and go to state 123
    RSHIFT  shift, and go to state 124

    $default  reduce using rule 63 (Expr2)


State 159

   32 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 170
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 160

   27 recVAR: COMMA ID • recVAR

    COMMA  shift, and go to state 127

    $default  reduce using rule 28 (recVAR)

    recVAR  go to state 171


State 161

   26 VarDecl: Type ID recVAR SEMICOLON •

    $default  reduce using rule 26 (VarDecl)


State 162

   19 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 19 (FormalParams)


State 163

   20 recFP: COMMA Type • ID recFP

    ID  shift, and go to state 172


State 164

   49 recCOMMAEXP: COMMA Expr • recCOMMAEXP

    COMMA  shift, and go to state 133

    $default  reduce using rule 50 (recCOMMAEXP)

    recCOMMAEXP  go to state 173


State 165

   46 MethodInvocation: ID LPAR Expr recCOMMAEXP RPAR •

    $default  reduce using rule 46 (MethodInvocation)


State 166

   30 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
   31          | IF LPAR Expr RPAR Statement •

    ELSE  shift, and go to state 174

    $default  reduce using rule 31 (Statement)


State 167

   38 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 168

   37 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 169

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 175


State 170

   32 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 32 (Statement)


State 171

   27 recVAR: COMMA ID recVAR •

    $default  reduce using rule 27 (recVAR)


State 172

   20 recFP: COMMA Type ID • recFP

    COMMA  shift, and go to state 130

    $default  reduce using rule 21 (recFP)

    recFP  go to state 176


State 173

   49 recCOMMAEXP: COMMA Expr recCOMMAEXP •

    $default  reduce using rule 49 (recCOMMAEXP)


State 174

   30 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    LBRACE     shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    PRINT      shift, and go to state 37
    PARSEINT   shift, and go to state 38
    RETURN     shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 177
    recSEMICOLON      go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 175

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 178


State 176

   20 recFP: COMMA Type ID recFP •

    $default  reduce using rule 20 (recFP)


State 177

   30 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 30 (Statement)


State 178

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 52 (ParseArgs)
